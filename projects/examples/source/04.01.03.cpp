////////////////////////////////////////////////////////////////////////////////////////////

#include <iostream>

////////////////////////////////////////////////////////////////////////////////////////////

template < typename T > void handle_v1           (T    ) { std::cout << "handle_v1 (1)\n"; }

template < typename T > void handle_v1           (T *  ) { std::cout << "handle_v1 (2)\n"; }

template <            > void handle_v1 < int   > (int *) { std::cout << "handle_v1 (3)\n"; } 

////////////////////////////////////////////////////////////////////////////////////////////

template < typename T > void handle_v2           (T    ) { std::cout << "handle_v2 (1)\n"; }

template <            > void handle_v2 < int * > (int *) { std::cout << "handle_v2 (2)\n"; } 

template < typename T > void handle_v2           (T *  ) { std::cout << "handle_v2 (3)\n"; }

////////////////////////////////////////////////////////////////////////////////////////////

int main()
{
    int * x = nullptr;

//  ------------------
	
	handle_v1(x);

	handle_v2(x);
}

////////////////////////////////////////////////////////////////////////////////////////////