///////////////////////////////////////////////////////////////////////////////////////

#include <type_traits>
#include <utility>

///////////////////////////////////////////////////////////////////////////////////////

template < typename T > std::add_rvalue_reference_t < T > declval();

///////////////////////////////////////////////////////////////////////////////////////

class Entity 
{ 
private :

	Entity() = default;
};

///////////////////////////////////////////////////////////////////////////////////////

int test(Entity);

///////////////////////////////////////////////////////////////////////////////////////

int main()
{
    static_assert(std::is_same_v < decltype(test(     declval < Entity > ())), int > );

    static_assert(std::is_same_v < decltype(test(std::declval < Entity > ())), int > );
}

///////////////////////////////////////////////////////////////////////////////////////