////////////////////////////////////////////////////////////////////////////////////////////////

#include <functional>
#include <unordered_set>

////////////////////////////////////////////////////////////////////////////////////////////////

struct Entity 
{ 
	int x = 0;
};

////////////////////////////////////////////////////////////////////////////////////////////////

class Hash
{
public :

	auto operator()(Entity const & entity) const
	{
		return std::hash < int > ()(entity.x);
	}
};

////////////////////////////////////////////////////////////////////////////////////////////////

class Equal
{
public :

	auto operator()(Entity const & lhs, Entity const & rhs) const
	{
		return lhs.x == rhs.x;
	}
};

////////////////////////////////////////////////////////////////////////////////////////////////

int main()
{
	std::unordered_set < Entity, Hash, Equal > entities = { { 1 }, { 2 }, { 3 }, { 4 }, { 5 } };
}

////////////////////////////////////////////////////////////////////////////////////////////////