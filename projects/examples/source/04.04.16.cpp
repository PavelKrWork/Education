////////////////////////////////////////////////////////////////////////

#include <concepts>
#include <iostream>

////////////////////////////////////////////////////////////////////////

template < typename T > void handle_v1(T x) requires std::integral < T >
{
	std::cout << "handle_v1 : x = " << x << '\n';
}

////////////////////////////////////////////////////////////////////////

template < std::integral T > auto handle_v2(T x)
{
	std::cout << "handle_v2 : x = " << x << '\n';
}

////////////////////////////////////////////////////////////////////////

void handle_v3(std::integral auto x)
{
	std::cout << "handle_v3 : x = " << x << '\n';
}

////////////////////////////////////////////////////////////////////////

int main()
{
    handle_v1(1);
    
    handle_v2(1);

    handle_v3(1);
}

////////////////////////////////////////////////////////////////////////