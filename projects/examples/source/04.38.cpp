//////////////////////////////////////////////////////////////////////

#include <concepts>
#include <iostream>

//////////////////////////////////////////////////////////////////////

template < typename T > void test_v1(T x) requires std::integral < T >
{
	std::cout << "test_v1 : x = " << x << '\n';
}

//////////////////////////////////////////////////////////////////////

template < std::integral T > void test_v2(T x)
{
	std::cout << "test_v2 : x = " << x << '\n';
}

//////////////////////////////////////////////////////////////////////

void test_v3(std::integral auto x)
{
	std::cout << "test_v3 : x = " << x << '\n';
}

//////////////////////////////////////////////////////////////////////

int main()
{
    test_v1(1);
    
    test_v2(1);

    test_v3(1);
}

//////////////////////////////////////////////////////////////////////