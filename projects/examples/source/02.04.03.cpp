///////////////////////////////////////////////////////////////////

#include <cassert>
#include <cstddef>
#include <iostream>
#include <span>
#include <vector>

///////////////////////////////////////////////////////////////////

void update(int x, int * y, int & z) 
{ 
	++x, ++(*y), ++z;
}

///////////////////////////////////////////////////////////////////

void handle(int *, std::size_t   ) { std::cout << "handle (1)\n"; }

void handle(std::span < int >    ) { std::cout << "handle (2)\n"; }

void handle(std::vector < int > &) { std::cout << "handle (3)\n"; }

///////////////////////////////////////////////////////////////////

int main()
{
    auto x = 1, y = 2, z = 3;

//  -----------------------------------------------
	
	update(x, &y, z);

//  -----------------------------------------------

	assert(x == 1 && y == 3 && z == 4);

//  -----------------------------------------------

	auto size = 5uz;

//  -----------------------------------------------

	auto array = new int[size]{ 1, 2, 3, 4, 5 };

//  -----------------------------------------------

	handle(array, size);
    
//  -----------------------------------------------

	handle(std::span < int > (array, size));

//  -----------------------------------------------

	delete[] array;

//  -----------------------------------------------

	std::vector < int > vector = { 1, 2, 3, 4, 5 };

//  -----------------------------------------------

	handle(vector);
}

///////////////////////////////////////////////////////////////////