/////////////////////////////////////////////////////////////////////////////////////////

#include <type_traits>
#include <utility>

/////////////////////////////////////////////////////////////////////////////////////////

template < typename T > std::add_rvalue_reference_t < T > declval();

/////////////////////////////////////////////////////////////////////////////////////////

class Entity 
{ 
private :

	Entity() = default;
};

/////////////////////////////////////////////////////////////////////////////////////////

int handle(Entity);

/////////////////////////////////////////////////////////////////////////////////////////

int main()
{
    static_assert(std::is_same_v < decltype(handle(     declval < Entity > ())), int > );

    static_assert(std::is_same_v < decltype(handle(std::declval < Entity > ())), int > );
}

/////////////////////////////////////////////////////////////////////////////////////////